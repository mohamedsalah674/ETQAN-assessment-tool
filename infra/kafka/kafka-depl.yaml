apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-claim0

  labels:
    app: kafka
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka

  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka
          env:
            - name: ENABLE_AUTO_EXTEND
              value: "true"
            - name: KAFKA_RESERVED_BROKER_MAX_ID
              value: "999999999"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: "kafka-srv"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: TOPIC_AUTO_CREATE
              value: "true"
            - name: KAFKAJS_NO_PARTITIONER_WARNING
              value: "true"
          resources: {}
      volumes:
        - name: kafka-claim0
          persistentVolumeClaim:
            claimName: kafka-claim0
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-srv

spec:
  selector:
    app: kafka
  type: NodePort
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
      protocol: TCP
      nodePort: 32092
